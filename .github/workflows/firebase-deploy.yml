name: Firebase Auto Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      functions: ${{ steps.changes.outputs.functions }}
      firestore: ${{ steps.changes.outputs.firestore }}
      extensions: ${{ steps.changes.outputs.extensions }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            functions:
              - 'Firebase/functions/**'
            firestore:
              - 'Firebase/firestore.rules'
              - 'Firebase/firestore.indexes.json'
            extensions:
              - 'Firebase/extensions/**'

  deploy:
    needs: changes
    if: github.ref == 'refs/heads/main' && (needs.changes.outputs.functions == 'true' || needs.changes.outputs.firestore == 'true' || needs.changes.outputs.extensions == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: Firebase/functions/package-lock.json

      - name: Cache Firebase Functions dependencies
        uses: actions/cache@v3
        with:
          path: Firebase/functions/node_modules
          key: ${{ runner.os }}-functions-${{ hashFiles('Firebase/functions/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-functions-

      - name: Cache Firebase CLI
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase
          key: ${{ runner.os }}-firebase-cli
          restore-keys: |
            ${{ runner.os }}-firebase-

      - name: Install dependencies
        run: |
          cd Firebase/functions
          npm ci

      - name: Build functions
        if: needs.changes.outputs.functions == 'true'
        run: |
          cd Firebase/functions
          npm run build

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy Functions
        if: needs.changes.outputs.functions == 'true'
        run: |
          cd Firebase
          firebase deploy --only functions

      - name: Deploy Firestore Rules
        if: needs.changes.outputs.firestore == 'true'
        run: |
          cd Firebase
          firebase deploy --only firestore

      - name: Deploy Extensions
        if: needs.changes.outputs.extensions == 'true'
        run: |
          cd Firebase
          firebase deploy --only extensions

  notify:
    needs: [changes, deploy]
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## Firebase Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Functions: ${{ needs.changes.outputs.functions == 'true' && '✅ Deployed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Firestore: ${{ needs.changes.outputs.firestore == 'true' && '✅ Deployed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Extensions: ${{ needs.changes.outputs.extensions == 'true' && '✅ Deployed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY