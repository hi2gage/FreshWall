rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 🔧 Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isInTeam(teamId) {
      return exists(/databases/$(database)/documents/teams/$(teamId)/users/$(request.auth.uid));
    }

    function isLead(teamId) {
      return get(/databases/$(database)/documents/teams/$(teamId)/users/$(request.auth.uid)).data.role == "lead";
    }

    // 👤 User documents - team members can read all, users can update their own
    match /teams/{teamId}/users/{userId} {
      allow read: if isSignedIn() && isInTeam(teamId);
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    match /teams/{teamId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); // ✅ allow any signed-in user to create a new team
    }

    // 🧑‍💼 Clients
    match /teams/{teamId}/clients/{clientId} {
      allow read: if isSignedIn() && isInTeam(teamId);
      // Allow team members to create clients; only leads may update or delete
      allow create: if isSignedIn() && isInTeam(teamId);
      allow update, delete: if isSignedIn() && isLead(teamId);
    }

    // 🎯 Incidents under client-specific path
    match /teams/{teamId}/clients/{clientId}/incidents/{incidentId} {
      allow read: if isSignedIn() && isInTeam(teamId);
      allow create: if isSignedIn() && isInTeam(teamId);
      allow update, delete: if isSignedIn() && isLead(teamId);
    }

    // 🎯 Top-level incidents collection for the team
    match /teams/{teamId}/incidents/{incidentId} {
      allow read: if isSignedIn() && isInTeam(teamId);
      allow create: if isSignedIn() && isInTeam(teamId);
      allow update, delete: if isSignedIn() && isLead(teamId);
    }
  }
}